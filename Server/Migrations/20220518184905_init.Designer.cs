// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZAI.Server.Database;

#nullable disable

namespace ZAI.Server.Migrations
{
    [DbContext(typeof(ZAIDbContext))]
    [Migration("20220518184905_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("ZAI.Server.Database.AddressessEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("District")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Province")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Adressess");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Słoneczna 1",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Makowa 5C",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Piaskowa 1b",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Pythonowa 16",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Javascriptowa 1",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Hakerska 21/37",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Drewniana 9/2",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Gruszkowa 4",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 9,
                            Address = "Humusowa 18",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        },
                        new
                        {
                            Id = 10,
                            Address = "Jana Wazy 13",
                            City = "Poznań",
                            District = "Poznańskie",
                            Province = "Wielkopolskie",
                            ZipCode = "60-001"
                        });
                });

            modelBuilder.Entity("ZAI.Server.Database.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "User"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Administrator"
                        });
                });

            modelBuilder.Entity("ZAI.Server.Database.RoleLinks", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("RoleID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleID");

                    b.HasIndex("UserID");

                    b.ToTable("RolesLinks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            RoleID = 1,
                            UserID = 1
                        },
                        new
                        {
                            Id = 2,
                            RoleID = 2,
                            UserID = 2
                        },
                        new
                        {
                            Id = 3,
                            RoleID = 1,
                            UserID = 3
                        },
                        new
                        {
                            Id = 4,
                            RoleID = 2,
                            UserID = 3
                        });
                });

            modelBuilder.Entity("ZAI.Server.Database.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AddTime = new DateTime(2022, 5, 18, 20, 49, 4, 647, DateTimeKind.Local).AddTicks(1625),
                            Login = "user",
                            PasswordHash = "$2a$11$MYirFvjW6QlQr8q/hsvF5Oe4zZe.MGBxikLOKQnKqB/CrbeJU5Wqy"
                        },
                        new
                        {
                            Id = 2,
                            AddTime = new DateTime(2022, 5, 18, 20, 49, 4, 825, DateTimeKind.Local).AddTicks(7444),
                            Login = "user2",
                            PasswordHash = "$2a$11$7s1I9.ZOow7GSqX8/Bi2K.0EfPjyTgv909BRwIjfZZyCUN/LqjGVG"
                        },
                        new
                        {
                            Id = 3,
                            AddTime = new DateTime(2022, 5, 18, 20, 49, 4, 983, DateTimeKind.Local).AddTicks(8533),
                            Login = "user3",
                            PasswordHash = "$2a$11$3tKkiv6k2a5w/4SUumozze9fWOMC4smH0MRa7AVbOZxuUGxOaqbdm"
                        });
                });

            modelBuilder.Entity("ZAI.Server.Database.RoleLinks", b =>
                {
                    b.HasOne("ZAI.Server.Database.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ZAI.Server.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
